[tool.ruff]

line-length = 79  # Match your coding standards
target-version = "py313"  # Target Python 3.13

[tool.ruff.lint]
select = ["ALL"]  # Enable all available rules for maximum coverage

ignore = [
    # --- Docstring-related ignores (pydocstyle) ---
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D105",    # Missing docstring in magic method
    "D107",    # Missing docstring in `__init__`
    "D200",    # One-line docstring should fit on one line
    "D201",    # No blank lines allowed before function docstring
    "D202",    # No blank lines allowed after function docstring
    "D203",    # 1 blank line required before class docstring
    "D204",    # 1 blank line required after class docstring
    "D205",    # 1 blank line required between summary line and description
    "D206",    # Docstring should be indented with spaces, not tabs
    "D208",    # Docstring is over-indented
    "D209",    # Multi-line docstring closing quotes should be on a separate line
    "D210",    # No whitespaces allowed surrounding docstring text
    "D211",    # No blank lines allowed before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D213",    # Multi-line docstring summary should start at the second line
    "D301",    # Use r""" if any backslashes in a docstring
    "D400",    # First line should end with a period
    "D401",    # First line should be in imperative mood
    "D403",    # First word of the first line should be capitalized
    "D404",    # First word of the docstring should not be "This"
    "D406",    # Section name should end with a newline
    "D409",    # Section underline should match the length of its name
    "D413",    # Missing blank line after last section
    "D415",    # First line should end with a period, question mark, or exclamation point
    "D417",    # Missing argument descriptions in the docstring

    # --- Code cleanliness / style issues ---
    "ERA001",  # Found commented-out code
    "RET504",  # Unnecessary variable assignment before return (intentionally ignored for preferred return style)
    # "PLR0913", # Too many arguments in fuction definition - more than 5
    "PLR1711", # Useless `return` statement (e.g., return None at end of function)
    "PLR2044", # Line with empty comment 
    "S311",    # Use of random module for non-cryptographic purposes

    # --- Formatting / whitespace issues ---
    "COM812",  # Trailing comma missing
    "I001",    # Import statement block un-sorted or un-formatted
    "Q000",    # Inconsistent use of quotes (single vs. double)
    "W191",    # Indentation contains tabs
    "W293",    # Trailing whitespace on blank line

    # --- Runtime or debug code flags ---
    "T201",    # `print()` found (use logging instead for production)

    # --- Object-oriented and encapsulation ---
    "PD002",   # Use of inplace=True parameter in pandas methods
    "SLF001",  # Accessing private members (e.g., `_internal_attr`)

]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.format]
# Use tabs for indentation as per your coding style
indent-style = "tab"
quote-style = "double"
